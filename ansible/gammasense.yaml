---
  - name: Configure app web server
    hosts: all
    remote_user: "{{ my_user }}"
    become: yes
    vars:
      my_user: stefano
      my_site: gammasense.org
      my_home: "/home/{{ my_user }}"    
      admin_mail: "{{ my_user }}/@{{ my_site }}"
      root_dir: /var/www
      src_home: "/home/{{ my_user }}/src"
      app_name: gamma
      app_git_repo: https://github.com/waagsociety/GammaSense.git
      algo_name: algo
      algo_git_repo: https://github.com/waagsociety/GammaSense.git
      algo_git_branch: algorithm
      server_git_repo: https://github.com/waagsociety/makingradio_backend.git
      server_port: 4000
      conf_file: gamma.yaml
      node_version: 6.x
    roles:
     - role: zzet.postgresql
       tags:
         - database
       pg_postgis: true
       pg_postgis_version: '2.3'
     - role: palkan.ruby
       tags:
         - ruby
     - role: thefinn93.letsencrypt
       tags:
         - letsencrypt
       letsencrypt_webroot_path: "{{ root_dir }}"
       letsencrypt_email: "{{ admin_mail }}"
       letsencrypt_cert_domains:
        - "{{ my_site }}"
        - "www.{{ my_site }}"
       letsencrypt_renewal_command_args: '--renew-hook "systemctl restart nginx"'
     - role: nickjj.nginx
       tags:
         - nginx
       # nginx_basic_auth:
       #   - { user: 'coolperson', password: 'heylookatmeicanviewtheprivateblog' }
       nginx_sites:
         default:
           domains: ["{{ my_site }}", "www.{{ my_site }}"]
           default_server: True
           root: "{{ root_dir }}/{{ app_name }}"
           nginx_letsencrypt_root: "{{ root_dir }}/challenges"
           ssl:
             certpath: /etc/letsencrypt/live
          #  upstreams:
          #    - name: 'gammaapp'
          #      servers: ["localhost:{{ server_port }}"]
          #      add_proxy_settings:
          #        - 'proxy_http_version 1.1'
          #        - 'proxy_set_header Host $http_host'
          #        - 'proxy_set_header Upgrade $http_upgrade'
          #        - 'proxy_buffering off'
           custom_root_location: |
               userid         on;
               userid_domain  {{ my_site }};
               userid_name    deviceIdentifier;
               userid_path    /;
               userid_expires max;
           custom_locations: |
            location = /app {
              return 302 /app/;
            }
            location /app/ {
              proxy_http_version 1.1;
              proxy_set_header Host $http_host;
              proxy_set_header Upgrade $http_upgrade;
              proxy_buffering off;
              proxy_pass http://localhost:{{ server_port }}/;
            }
             location /{{ algo_name }} {
              root /var/www/;
            }
           # upstreams:
           #   - name: 'myapp'
           #     servers: ['localhost:3000', 'localhost:3001']
         # blog:
         #   domains: ['blog.example.com']
         #   serve_assets:
         #     enabled: False
         #   basic_auth: True
        #  www:
        #     domains: ["www.{{ my_site }}"]
        #     default_server: False
        #     root: "{{ root_dir }}/{{ app_name }}"
        #     nginx_letsencrypt_root: "{{ root_dir }}/challenges"
        #     ssl:
        #       certpath: /etc/letsencrypt/live
    #  - role: mrlesmithjr.nodejs
    #    nodejs_debian_packages:
    #      - npm
    #      - build-essential
     - role: ChengLong.iptables
       tags:
         - iptables
    tasks:
      - name: Set Node repo
        tags:
          - Node
        script: ./install_node_repo.sh "{{ my_home }}/nodesource_setup.sh" "{{ node_version }}" "{{ my_user }}"
        args:
          creates: "{{ my_home }}/nodesource_setup.sh"
      - name: Deploy app
        tags:
          - app      
        script: ./deploy_app.sh "{{ my_user }}" "{{ src_home }}/{{ app_name }}" "{{ root_dir }}/{{ app_name }}" "{{ app_git_repo }}"
      - name: Deploy algo
        tags:
          - algo      
        script: ./deploy_algo.sh "{{ my_user }}" "{{ src_home }}/{{ algo_name }}" "{{ root_dir }}/{{ algo_name }}" "{{ algo_git_repo }}" "{{ algo_git_branch }}"
      - name: Copy conf file
        tags:
          - server
        copy:
          src: "../gammaserver/{{ conf_file }}"
          dest: "{{ my_home }}/{{ conf_file }}"
          owner: "{{ my_user }}"
          group: "{{ my_user }}"
          mode: 0644
      - name: Deploy server
        tags:
          - server      
        script: ./deploy_server.sh "{{ src_home }}/server" "{{ server_git_repo }}" "{{ my_user }}" "{{ my_home }}/{{ conf_file }}"
      # args:
      #   creates: /the/created/file.txt
